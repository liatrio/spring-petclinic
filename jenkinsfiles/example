#!/bin/env groovy

def sleeplength = 0

pipeline {
    agent none

    environment {
        IMAGE = "liatrio/petclinic-tomcat"
    }

    stages {
        stage('Build') {
            agent any
            steps {
                sh 'mvn clean install'
            }
        }

        stage('Static Analysis') {
            agent any
            steps {
                script {
                    sh "sleep ${sleeplength}"
                }
            }
        }

        stage('Package') {
            agent any
            steps {
                script {
                    //Find just the image name.
                    image_with_registry = "${env.IMAGE}"
                    image = image_with_registry.substring(image_with_registry.lastIndexOf('/') + 1, image_with_registry.length())

                    //Find the tag.
                    if ( env.BRANCH_NAME == 'master' ) {
                        pom = readMavenPom file: 'pom.xml'
                        TAG = pom.version
                    } else {
                        TAG = env.BRANCH_NAME
                    }
                    sh "docker build -t ${image}:${TAG} ."
                }
            }
        }

        stage('Deploy Local') {
            agent any
            steps {
                sh 'docker rm -f petclinic-tomcat-temp || true'
                sh "docker run -d -p 9966:8080 --name petclinic-tomcat-temp ${image}:${TAG}"
            }
        }

        stage('Smoke Test Local') {
            agent any
            steps {
                sh "cd regression-suite && mvn test -Dcucumber.options=\"--tags @smoke\" -DPETCLINIC_URL=http://localhost:9966/petclinic/ -Dtest=\"RunCukesTest**\""
            }
        }

        stage('Remove Local Container') {
            agent any
            steps {
                //sh 'docker rm -f petclinic-tomcat-temp || true'
                sh "sleep ${sleeplength}"
            }
        }

        stage('Push to Registry') {
            agent any
            steps {
                //Login to AWS ECR
                sh 'aws ecr get-login --no-include-email --region us-east-1 --registry-ids 060299086407 | sh'

                //Make sure that I have a repository for petclinic
                sh "aws cloudformation deploy --stack-name PetClinicECR --template-file CloudFormations/petclinic-ECR.yaml --parameter-overrides ImageName=${image} || true"

                //Tag and Push to Jonathan's ECR
                sh "docker tag ${image}:${TAG} 060299086407.dkr.ecr.us-east-1.amazonaws.com/${image}:${TAG}"
                //sh "docker push 060299086407.dkr.ecr.us-east-1.amazonaws.com/${image}:${TAG}"
            }
        }

        stage('Deploy to Dev') {
            agent any
            steps{
                script{
                    //This will deploy to a development environment no matter what.  If it's on the master branch it will label the envrionment dev, otherwise it will be the branch name.
                    if ( env.BRANCH_NAME == 'master' ) {
                        enviro = "dev"
                    } else {
                        enviro = env.BRANCH_NAME
                    }
                    sh "helm upgrade -i petclinic-${enviro}-helm ./helm --set environment=${enviro},image=${image},imagetag=${TAG}"
                }
            }

        }

        stage('Smoke Test Dev') {
            agent any
            steps{
                //sample dummy step
                sh "sleep ${sleeplength}"
            }

        }

        stage('Scan Container') {
            agent any
            steps {
                //sample dummy step
                sh "sleep ${sleeplength}"
            }
        }

        stage('Deploy to QA') {
            agent any
            steps {
                //sample dummy step
                sh "sleep ${sleeplength}"
            }
        }

        stage('Smoke Test QA') {
            agent any
            steps {
                //sample dummy step
                sh "sleep ${sleeplength}"
            }
        }

        stage('Run Test Suite') {
            agent any
            steps {
                //sample dummy step
                sh "sleep ${sleeplength}"
            }
        }

        stage('Deploy to Prod') {
            agent any
            steps {
                //sample dummy step
                sh "sleep ${sleeplength}"
            }
        }

        stage('Smoke Test Prod') {
            agent any
            steps {
                //sample dummy step
                sh "sleep ${sleeplength}"
            }
        }
    }
}
